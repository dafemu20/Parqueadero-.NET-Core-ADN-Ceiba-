// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parqueadero.data;

namespace Parqueadero.Migrations
{
    [DbContext(typeof(ParqueaderoContext))]
    [Migration("20190927190338_initialContext")]
    partial class initialContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parqueadero.data.PicoPlaca", b =>
                {
                    b.Property<int>("PicoPlacaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPicoPlaca");

                    b.Property<string>("DiaPicoPlaca");

                    b.Property<string>("ValorPlaca");

                    b.HasKey("PicoPlacaId");

                    b.ToTable("PicoPlaca");
                });

            modelBuilder.Entity("Parqueadero.data.Tarifa", b =>
                {
                    b.Property<int>("TarifaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTarifa");

                    b.Property<decimal>("ValorTarifa");

                    b.HasKey("TarifaId");

                    b.ToTable("Tarifa");
                });

            modelBuilder.Entity("Parqueadero.data.TipoVehiculo", b =>
                {
                    b.Property<int>("TipoVehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoVehiculo");

                    b.HasKey("TipoVehiculoId");

                    b.ToTable("TipoVehiculo");
                });

            modelBuilder.Entity("Parqueadero.data.Tiquete", b =>
                {
                    b.Property<int>("TiqueteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<int>("TarifaId");

                    b.Property<decimal>("ValorTotal");

                    b.Property<string>("VehiculoPlaca");

                    b.HasKey("TiqueteId");

                    b.HasIndex("TarifaId");

                    b.HasIndex("VehiculoPlaca");

                    b.ToTable("Tiquete");
                });

            modelBuilder.Entity("Parqueadero.data.Vehiculo", b =>
                {
                    b.Property<string>("VehiculoPlaca")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cilindraje");

                    b.Property<string>("DescripcionVehiculo");

                    b.Property<int>("TipoVehiculoId");

                    b.HasKey("VehiculoPlaca");

                    b.HasIndex("TipoVehiculoId");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("Parqueadero.data.Tiquete", b =>
                {
                    b.HasOne("Parqueadero.data.Tarifa", "Tarifa")
                        .WithMany("Tiquetes")
                        .HasForeignKey("TarifaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Parqueadero.data.Vehiculo", "Vehiculo")
                        .WithMany("Tiquetes")
                        .HasForeignKey("VehiculoPlaca");
                });

            modelBuilder.Entity("Parqueadero.data.Vehiculo", b =>
                {
                    b.HasOne("Parqueadero.data.TipoVehiculo", "TipoVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoVehiculoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
